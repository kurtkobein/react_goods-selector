{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsWithId","map","name","id","App","state","selectedGoods","clearBasket","setState","addGood","goodToAdd","prevState","removeGood","goodToRemove","filter","good","getFormattedProduct","productList","length","slice","join","this","productsFormatted","className","type","onClick","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAsBMA,EAlB4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQ0CC,KAAI,SAACC,EAAMC,GAAP,MAAe,CAAED,OAAMC,SAMjEC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,WACZ,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,QAAU,SAACC,GACT,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BL,cAAc,GAAD,mBAAMK,EAAUL,eAAhB,CAA+BI,S,EAIhDE,WAAa,SAACC,GACZ,EAAKL,UAAS,SAAAG,GAGZ,MAAO,CAAEL,cAFKK,EAAUL,cAAcQ,QAAO,SAAAC,GAAI,OAAIA,IAASF,U,EAMlEG,oBAAsB,SAACC,GACrB,OAAQA,EAAYC,QAClB,KAAM,EACJ,MAAO,oBAET,KAAM,EACJ,MAAM,GAAN,OAAUD,EAAY,IAExB,KAAM,EACJ,MAAM,GAAN,OAAUA,EAAY,GAAtB,gBAAgCA,EAAY,IAE9C,QACE,MAAM,GAAN,OAAUA,EAAYE,MAAM,GAAI,GAAGC,KAAK,MAAxC,gBAAqDH,EAAYE,OAAO,M,4CAI9E,WAAU,IAAD,OACCb,EAAkBe,KAAKhB,MAAvBC,cACFgB,EAAoBD,KAAKL,oBAAoBV,GAEnD,OACE,sBAAKiB,UAAU,MAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,wBAAd,mCACsBD,MAEpBhB,EAAcY,QACd,wBACEM,KAAK,SACLC,QAASJ,KAAKd,YACdgB,UAAU,yBAHZ,kBASJ,qBAAKA,UAAU,eAAf,SACGvB,EAAYC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACf,sBAAcoB,UAAU,eAAxB,UACE,sBACEA,UAAWG,IACT,wBACA,CAAE,gCAAiCpB,EAAcqB,SAASzB,KAH9D,SAMGA,IAEFI,EAAcqB,SAASzB,GACtB,wBACEsB,KAAK,SACLD,UAAU,uBACVE,QAAS,kBAAM,EAAKb,WAAWV,IAHjC,eAQA,wBACEsB,KAAK,SACLD,UAAU,uBACVE,QAAS,kBAAM,EAAKhB,QAAQP,IAH9B,mBAlBMC,e,GA7DJyB,IAAMC,WA8FTzB,ICvHf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ca457e8a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface Good {\n  id: number,\n  name: string,\n}\n\nconst goodsWithId: Good[] = goodsFromServer.map((name, id) => ({ name, id }));\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearBasket = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  addGood = (goodToAdd: string) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, goodToAdd],\n    }));\n  };\n\n  removeGood = (goodToRemove: string) => {\n    this.setState(prevState => {\n      const goods = prevState.selectedGoods.filter(good => good !== goodToRemove);\n\n      return { selectedGoods: goods };\n    });\n  };\n\n  getFormattedProduct = (productList: string[]) => {\n    switch (productList.length) {\n      case (0):\n        return 'No goods selected';\n\n      case (1):\n        return `${productList[0]}`;\n\n      case (2):\n        return `${productList[0]} and ${productList[1]}`;\n\n      default:\n        return `${productList.slice(0, -1).join(', ')} and ${productList.slice(-1)}`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const productsFormatted = this.getFormattedProduct(selectedGoods);\n\n    return (\n      <div className=\"App\">\n        <div className=\"selected-goods\">\n          <h1 className=\"selected-goods__title\">\n            {`Selected goods: ${productsFormatted}`}\n          </h1>\n          {!selectedGoods.length || (\n            <button\n              type=\"button\"\n              onClick={this.clearBasket}\n              className=\"selected-goods__button\"\n            >\n              X\n            </button>\n          )}\n        </div>\n        <div className=\"product-list\">\n          {goodsWithId.map(({ name, id }) => (\n            <div key={id} className=\"product-card\">\n              <span\n                className={classNames(\n                  'product-card__product',\n                  { 'product-card__product--active': selectedGoods.includes(name) },\n                )}\n              >\n                {name}\n              </span>\n              {selectedGoods.includes(name) ? (\n                <button\n                  type=\"button\"\n                  className=\"product-card__button\"\n                  onClick={() => this.removeGood(name)}\n                >\n                  x\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"product-card__button\"\n                  onClick={() => this.addGood(name)}\n                >\n                  add\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}